apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
// This is the libary version used when deploying the artifact

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 4
        versionName "3.4.18"
//        buildConfigField "int", 'VERSION_CODE', String.valueOf(1)
//        buildConfigField 'String', 'VERSION_NAME', "\"" + "3.4.16" + "\""
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
    }
    lintOptions{
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation 'com.android.support:support-annotations:25.2.0'
//    implementation 'androidx.appcompat:appcompat:1.0.2'
}

version = "$android.defaultConfig.versionName"

task copyMappingFile(type: Copy){
    from('build/outputs/mapping/release/mapping.txt')
    into('./')
    include('mapping.txt')
    rename('mapping.txt',"zhuge_v" + "$version" +"_mapping.txt")
}

task clearMappingFile(type: Delete) {
    delete "zhuge_v" + "$version" +"_mapping.txt"
}

task makeJar(type: Copy) {
    from('build/intermediates/aar_main_jar/debug/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', "zhuge_debug_v" + "$version" + ".jar")
}

task clearJar(type: Delete) {
    delete "build/outputs/"
}

task makeRelease(type: Copy) {
    from('build/intermediates/aar_main_jar/release/')
    into('build/zhuge_android_v' + "$version" + '/lib')
    include('classes.jar')
    rename ('classes.jar', "zhuge_v" + "$version" + ".jar")
}

task clearRelease(type: Delete) {
    delete "build/zhuge_android_v" + "$version"
    delete "zhuge_v" + "$version" +"_mapping.txt"
}

makeJar.dependsOn(clearJar, build)
makeRelease.dependsOn(clearRelease, build, copyMappingFile)

def siteUrl = 'https://github.com/zhugesdk'
def gitUrl = 'https://github.com/zhugesdk'
group = "com.zhuge.analysis"   // Maven Group ID for the artifact，一般填你唯一的包名

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
